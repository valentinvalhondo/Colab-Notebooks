{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Pandas Basics","provenance":[],"authorship_tag":"ABX9TyNLPIpY2h0dPPqirMniIS7i"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"1C4FzZy0EReg","colab_type":"text"},"source":["A DataFrame is similar to an in-memory spreadsheet. Like a spreadsheet:\n","\n","* A DataFrame stores data in cells.\n","* A DataFrame has named columns (usually) and numbered rows.\n","\n","A DataFrame is a 2-dimensional data structure that can store data of different types (including characters, integers, floating point values, categorical data and more) in columns. "]},{"cell_type":"code","metadata":{"id":"bwOEq3L3CIql","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1601034109454,"user_tz":-60,"elapsed":1380,"user":{"displayName":"Valentin Valhondo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgvBrEgqCPSmi0Chnrx9uSHaP40hGnvfeUVA_7bmg=s64","userId":"09584914059744737936"}}},"source":["import numpy as np\n","import pandas as pd"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"IWC1MbFzEZUr","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"executionInfo":{"status":"ok","timestamp":1601034625548,"user_tz":-60,"elapsed":902,"user":{"displayName":"Valentin Valhondo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgvBrEgqCPSmi0Chnrx9uSHaP40hGnvfeUVA_7bmg=s64","userId":"09584914059744737936"}},"outputId":"39148d51-5cbc-4cb1-8f88-4285c229d18f"},"source":["# I want to store passenger data of the Titanic. For a number of passengers,\n","# I know the name (characters), age (integers) and sex (male/female) data.\n","\n","titanic = {\n","    \"Name\": [\"Valentin Valhondo\",\n","             \"Joao Canhoto\",\n","             \"Virginia Pascual\"],\n","    \"Age\": [22, 35, 58],\n","    \"Time\": [2.56, 5.12, -8.444],\n","    \"Sex\": [\"male\", \"male\", \"female\"]\n","}\n","\n","titanic_df = pd.DataFrame(titanic)\n","print(titanic_df)"],"execution_count":18,"outputs":[{"output_type":"stream","text":["                Name  Age   Time     Sex\n","0  Valentin Valhondo   22  2.560    male\n","1       Joao Canhoto   35  5.120    male\n","2   Virginia Pascual   58 -8.444  female\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yNKq1K3bFTe4","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":153},"executionInfo":{"status":"ok","timestamp":1601034450503,"user_tz":-60,"elapsed":829,"user":{"displayName":"Valentin Valhondo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgvBrEgqCPSmi0Chnrx9uSHaP40hGnvfeUVA_7bmg=s64","userId":"09584914059744737936"}},"outputId":"f99d515f-ae71-4bce-bef1-62e6d8a31273"},"source":["# Each column in a DataFrame is a Series\n","print(titanic_df[\"Age\"])\n","\n","# You can create a Series from scratch as well\n","ages = pd.Series([220, 350, 580], name=\"Ages\")\n","print(ages)"],"execution_count":9,"outputs":[{"output_type":"stream","text":["0    22\n","1    35\n","2    58\n","Name: Age, dtype: int64\n","0    220\n","1    350\n","2    580\n","Name: Ages, dtype: int64\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"KHBsIIG5F025","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":365},"executionInfo":{"status":"ok","timestamp":1601034680581,"user_tz":-60,"elapsed":1038,"user":{"displayName":"Valentin Valhondo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgvBrEgqCPSmi0Chnrx9uSHaP40hGnvfeUVA_7bmg=s64","userId":"09584914059744737936"}},"outputId":"fed2deb9-53d4-4f7b-e83c-4141a0c77c66"},"source":["# Getting info from a df or series\n","print(titanic_df[\"Age\"].max())\n","print(ages.max()) # Directly from a series\n","print(\" \")\n","print(\"The describe() method provides a quick overview of the numerical data in a DataFrame\")\n","titanic_df.describe()"],"execution_count":23,"outputs":[{"output_type":"stream","text":["58\n","580\n"," \n","The describe() method provides a quick overview of the numerical data in a DataFrame\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>38.333333</td>\n","      <td>-0.254667</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>18.230012</td>\n","      <td>7.206753</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>22.000000</td>\n","      <td>-8.444000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>28.500000</td>\n","      <td>-2.942000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>35.000000</td>\n","      <td>2.560000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>46.500000</td>\n","      <td>3.840000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>58.000000</td>\n","      <td>5.120000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["             Age      Time\n","count   3.000000  3.000000\n","mean   38.333333 -0.254667\n","std    18.230012  7.206753\n","min    22.000000 -8.444000\n","25%    28.500000 -2.942000\n","50%    35.000000  2.560000\n","75%    46.500000  3.840000\n","max    58.000000  5.120000"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"markdown","metadata":{"id":"Nmjc37vWGyB9","colab_type":"text"},"source":["How do I select a subset of a DataFrame?"]},{"cell_type":"code","metadata":{"id":"GfuP8zggG0KP","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"executionInfo":{"status":"ok","timestamp":1601034833872,"user_tz":-60,"elapsed":957,"user":{"displayName":"Valentin Valhondo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgvBrEgqCPSmi0Chnrx9uSHaP40hGnvfeUVA_7bmg=s64","userId":"09584914059744737936"}},"outputId":"29cd46fc-38d8-440f-f6ae-0b6ab9cf5549"},"source":["age_sex = titanic_df[[\"Age\", \"Sex\"]]\n","print(age_sex.head())"],"execution_count":26,"outputs":[{"output_type":"stream","text":["   Age     Sex\n","0   22    male\n","1   35    male\n","2   58  female\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"jOVEgkBBHUWn","colab_type":"text"},"source":["How do I filter specific rows from a DataFrame?"]},{"cell_type":"code","metadata":{"id":"8veCTOo-HWuU","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":119},"executionInfo":{"status":"ok","timestamp":1601035435243,"user_tz":-60,"elapsed":885,"user":{"displayName":"Valentin Valhondo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgvBrEgqCPSmi0Chnrx9uSHaP40hGnvfeUVA_7bmg=s64","userId":"09584914059744737936"}},"outputId":"f952a7e5-b77f-4c3c-8f5d-4dd2b49d629d"},"source":["above_25 = titanic_df[titanic_df[\"Age\"]>25]\n","print(above_25)\n","print()\n","above_25_female = titanic_df[(titanic_df[\"Age\"]>25) & (titanic_df[\"Sex\"]==\"male\")]\n","print(above_25_female)"],"execution_count":37,"outputs":[{"output_type":"stream","text":["               Name  Age   Time     Sex\n","1      Joao Canhoto   35  5.120    male\n","2  Virginia Pascual   58 -8.444  female\n","\n","           Name  Age  Time   Sex\n","1  Joao Canhoto   35  5.12  male\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"1o8w-dszJl6T","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":68},"executionInfo":{"status":"ok","timestamp":1601035572353,"user_tz":-60,"elapsed":864,"user":{"displayName":"Valentin Valhondo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgvBrEgqCPSmi0Chnrx9uSHaP40hGnvfeUVA_7bmg=s64","userId":"09584914059744737936"}},"outputId":"c10fcf72-78b1-4b2a-d150-db2401fce39d"},"source":["# Filter rows and colums\n","name_older_25 = titanic_df.loc[titanic_df[\"Age\"]>25,\"Name\"]\n","print(name_older_25)"],"execution_count":41,"outputs":[{"output_type":"stream","text":["1        Joao Canhoto\n","2    Virginia Pascual\n","Name: Name, dtype: object\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"kmWuJQDOKnaZ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":119},"executionInfo":{"status":"ok","timestamp":1601035741037,"user_tz":-60,"elapsed":892,"user":{"displayName":"Valentin Valhondo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgvBrEgqCPSmi0Chnrx9uSHaP40hGnvfeUVA_7bmg=s64","userId":"09584914059744737936"}},"outputId":"046bf002-afbf-47b5-cb1a-57d784c704dc"},"source":["# Create and populate a 5x2 NumPy array.\n","my_data = np.array([[0, 3], [10, 7], [20, 9], [30, 14], [40, 15]])\n","\n","# Create a Python list that holds the names of the two columns.\n","my_column_names = ['temperature', 'activity']\n","\n","# Create a DataFrame.\n","my_dataframe = pd.DataFrame(data=my_data, columns=my_column_names)\n","\n","# Print the entire DataFrame\n","print(my_dataframe)"],"execution_count":42,"outputs":[{"output_type":"stream","text":["   temperature  activity\n","0            0         3\n","1           10         7\n","2           20         9\n","3           30        14\n","4           40        15\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"g_PKzOpgK2Y1","colab_type":"text"},"source":["Tasks for codelab for ML course"]},{"cell_type":"code","metadata":{"id":"HGRqNo_OK1zQ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":119},"executionInfo":{"status":"ok","timestamp":1601037367008,"user_tz":-60,"elapsed":1024,"user":{"displayName":"Valentin Valhondo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgvBrEgqCPSmi0Chnrx9uSHaP40hGnvfeUVA_7bmg=s64","userId":"09584914059744737936"}},"outputId":"1e4b00f4-8f11-4992-dbfe-ec91d0625bbb"},"source":["array = np.random.randint(low=0, high=101, size=(3,4))\n","columns = ['Eleanor', 'Chidi', 'Tahani', 'Jason']\n","df_task1 = pd.DataFrame(data=array, columns=columns)\n","print(df_task1)\n","print()\n","print(df_task1['Eleanor'][1])"],"execution_count":58,"outputs":[{"output_type":"stream","text":["   Eleanor  Chidi  Tahani  Jason\n","0       68      6      94      0\n","1       84     48      91     11\n","2       64     37      89     94\n","\n","84\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"vvDEjD6WQ7f-","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"executionInfo":{"status":"ok","timestamp":1601037421537,"user_tz":-60,"elapsed":852,"user":{"displayName":"Valentin Valhondo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgvBrEgqCPSmi0Chnrx9uSHaP40hGnvfeUVA_7bmg=s64","userId":"09584914059744737936"}},"outputId":"3067717b-0409-4362-c296-75d9c8a785a5"},"source":["df_task1['Janet'] = df_task1['Tahani'] + df_task1['Jason']\n","print(df_task1)"],"execution_count":60,"outputs":[{"output_type":"stream","text":["   Eleanor  Chidi  Tahani  Jason  Janet\n","0       68      6      94      0     94\n","1       84     48      91     11    102\n","2       64     37      89     94    183\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"j4FuhiulQ7Tr","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]}]}